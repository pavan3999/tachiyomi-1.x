import kotlin.collections.List;

CREATE TABLE IF NOT EXISTS manga (
  id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
  sourceId INTEGER NOT NULL,
  key TEXT NOT NULL,
  title TEXT NOT NULL DEFAULT "",
  artist TEXT NOT NULL DEFAULT "",
  author TEXT NOT NULL DEFAULT "",
  description TEXT NOT NULL DEFAULT "",
  genres TEXT AS List<String> NOT NULL DEFAULT "",
  status INTEGER AS Int NOT NULL DEFAULT 0,
  cover TEXT NOT NULL DEFAULT "",
  customCover TEXT NOT NULL DEFAULT "",
  favorite INTEGER AS Boolean NOT NULL DEFAULT 0,
  lastUpdate INTEGER NOT NULL DEFAULT 0,
  lastInit INTEGER NOT NULL DEFAULT 0,
  dateAdded INTEGER NOT NULL DEFAULT 0,
  viewer INTEGER AS Int NOT NULL DEFAULT 0,
  flags INTEGER AS Int NOT NULL DEFAULT 0
);

CREATE INDEX IF NOT EXISTS favorite_manga_idx ON manga(favorite) WHERE favorite = 1;
CREATE INDEX IF NOT EXISTS key_source_manga_idx ON manga(key, sourceId);

findById:
SELECT * FROM manga WHERE id = ?;

findByKey:
SELECT * FROM manga WHERE key = ? AND sourceId = ?;

findFavorites:
SELECT * FROM manga WHERE favorite = 1;

insert:
INSERT INTO manga VALUES (NULL, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);

update:
UPDATE manga SET
  sourceId = coalesce(?, sourceId),
  key = coalesce(?, key),
  title = coalesce(?, title),
  artist = coalesce(?, artist),
  author = coalesce(?, author),
  description = coalesce(?, description),
  genres = coalesce(?, genres),
  status = coalesce(?, status),
  cover = coalesce(?, cover),
  customCover = coalesce(?, customCover),
  favorite = coalesce(?, favorite),
  lastUpdate = coalesce(?, lastUpdate),
  lastInit = coalesce(?, lastInit),
  dateAdded = coalesce(?, dateAdded),
  viewer = coalesce(?, viewer),
  flags = coalesce(?, flags)
WHERE id = ?;

deleteNonFavorite:
DELETE FROM manga WHERE favorite = 0;

lastInsertedId:
SELECT last_insert_rowid();
