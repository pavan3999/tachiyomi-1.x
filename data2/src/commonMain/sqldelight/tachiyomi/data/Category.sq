CREATE TABLE IF NOT EXISTS category (
  id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
  name TEXT NOT NULL DEFAULT "",
  sort INTEGER AS Int NOT NULL DEFAULT 0,
  updateInterval INTEGER AS Int NOT NULL DEFAULT 0
);

-- Insert uncategorized and all tables
INSERT OR IGNORE INTO category VALUES (0, "", 0, 0);
INSERT OR IGNORE INTO category VALUES (-2, "", 0, 0);
CREATE TRIGGER IF NOT EXISTS system_categories_deletion_trigger BEFORE DELETE ON category
BEGIN SELECT CASE
  WHEN old.id <= 0 THEN
    RAISE(ABORT, 'System category cant be deleted')
  END;
END;

findAll:
SELECT * FROM category ORDER BY sort;

findById:
SELECT * FROM category WHERE id = ?;

findForManga:
SELECT category.*
FROM category
JOIN mangacategory ON category.id = mangacategory.categoryId
WHERE mangacategory.mangaId = ?;

findAllWithCount:
-- User categories
SELECT category.*, COUNT(mangacategory.mangaId) AS mangaCount
FROM category
LEFT JOIN mangacategory
ON category.id = mangacategory.categoryId
WHERE category.id > 0
GROUP BY category.id
UNION ALL
-- Category.ALL
SELECT *, (
  SELECT COUNT()
  FROM library
) AS mangaCount
FROM category
WHERE category.id = -2
UNION ALL
 -- Category.UNCATEGORIZED_ID
SELECT *, (
  SELECT COUNT(library.id)
  FROM library
  WHERE NOT EXISTS (
    SELECT mangacategory.mangaId
    FROM mangacategory
    WHERE library.id = mangacategory.mangaId
  )
) AS mangaCount
FROM category
WHERE category.id = 0
ORDER BY sort;

insert:
INSERT INTO category VALUES (NULL, ?, ?, ?);

update:
UPDATE category SET
  name = coalesce(?, name),
  sort = coalesce(?, sort),
  updateInterval = coalesce(?, updateInterval)
WHERE id = ?;

deleteById:
DELETE FROM category WHERE id = ?;
